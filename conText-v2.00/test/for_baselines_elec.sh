  ####  Input: token file (one review per line; tokens are delimited by white space) 
  ####         label file (one label per line)
  ####  These input files were generated by prep_elec.sh and included in the package. 
  ####  
  ####  To display help on Step 1: enter "../bin/prepText gen_vocab"
  ####                     Step 2:       "../bin/prepText gen_b_feat"

  inpdir=data  # <= change this to where your token/label files are
  sz=25k

  options="LowerCase UTF8"

  #---  Step 1. Generate vocabulary
  echo Generaing uni-, bi-, and tri-gram vocabulary from training data ... 
  for nn in 1 2 3; do
    vocab_fn=data/elec-${sz}_trn-${nn}gram.vocab  
    ../bin/prepText gen_vocab input_fn=${inpdir}/elec-${sz}-train.txt.tok vocab_fn=$vocab_fn \
                              $options WriteCount n=$nn
  done 

  #---  Step 2.  Generate bag-of-ngram files ...
  echo 
  echo Generating bag-of-ngram files ... 
  for nn in 1 2 3; do
    if [ "$nn" = "1" ]; then
      voc_fn=data/elec-${sz}_trn-1gram.vocab
    elif [ "$nn" = "2" ]; then
      voc_fn=data/elec-${sz}_trn-12gram.vocab
      cat data/elec-${sz}_trn-1gram.vocab > $voc_fn 
      cat data/elec-${sz}_trn-2gram.vocab >>$voc_fn
    elif [ "$nn" = "3" ]; then
      voc_fn=data/elec-${sz}_trn-123gram.vocab
      cat data/elec-${sz}_trn-1gram.vocab > $voc_fn
      cat data/elec-${sz}_trn-2gram.vocab >>$voc_fn
      cat data/elec-${sz}_trn-3gram.vocab >>$voc_fn
    else
      echo "what?!"
      exit
    fi
    for set in train test; do
      inp_fn=${inpdir}/elec-${sz}-${set}
      if [ "$set" = "test" ]; then
        inp_fn=${inpdir}/elec-${set}
      fi
      outnm=data/elec-${sz}_${set}-bow${nn}
      ../bin/prepText gen_b_feat \
         vocab_fn=$voc_fn \
         input_fn=$inp_fn \
         output_fn_stem=$outnm \
         $options text_fn_ext=.txt.tok label_fn_ext=.cat \
         label_dic_fn=data/elec_cat.dic \
         Binary Unit

      #---  To convert the bag-of-ngram feature file and the target file to the svmLight format ... 
      # echo Converting to the svmLight format ... 
      # perl conv.pl $outnm 0 > ${outnm}.cat0.xy
    done
  done
